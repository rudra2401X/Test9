local Players = game:GetService("Players")
local DataStoreService = game:GetService("DataStoreService")
local playerDataStore = DataStoreService:GetDataStore("PlayerData")

-- Function to fetch backups for a player
local function getBackups(playerId)
    local versions = {}
    local success, errorMessage = pcall(function()
        for _, versionInfo in pairs(playerDataStore:ListVersionsAsync(playerId):GetCurrentPage()) do
            table.insert(versions, versionInfo.Version)
        end
    end)
    if success then
        return versions
    else
        warn("Error fetching backups:", errorMessage)
        return nil
    end
end

-- Function to rollback data
local function rollbackPlayerData(playerId, versionKey)
    local success, data = pcall(function()
        return playerDataStore:GetVersionAsync(playerId, versionKey)
    end)
    if success and data then
        playerDataStore:SetAsync(playerId, data)
        return true
    else
        return false, data
    end
end

-- GUI Setup
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Parent = game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui")

local Frame = Instance.new("Frame")
Frame.Size = UDim2.new(0.4, 0, 0.5, 0)
Frame.Position = UDim2.new(0.3, 0, 0.25, 0)
Frame.BackgroundColor3 = Color3.new(0.2, 0.2, 0.2)
Frame.Parent = ScreenGui

local PlayerIdLabel = Instance.new("TextLabel")
PlayerIdLabel.Size = UDim2.new(0.9, 0, 0.1, 0)
PlayerIdLabel.Position = UDim2.new(0.05, 0, 0.05, 0)
PlayerIdLabel.Text = "Enter Player ID:"
PlayerIdLabel.TextColor3 = Color3.new(1, 1, 1)
PlayerIdLabel.Parent = Frame

local PlayerIdInput = Instance.new("TextBox")
PlayerIdInput.Size = UDim2.new(0.9, 0, 0.1, 0)
PlayerIdInput.Position = UDim2.new(0.05, 0, 0.2, 0)
PlayerIdInput.BackgroundColor3 = Color3.new(0.3, 0.3, 0.3)
PlayerIdInput.TextColor3 = Color3.new(1, 1, 1)
PlayerIdInput.PlaceholderText = "Player ID"
PlayerIdInput.Parent = Frame

local GetBackupsButton = Instance.new("TextButton")
GetBackupsButton.Size = UDim2.new(0.9, 0, 0.1, 0)
GetBackupsButton.Position = UDim2.new(0.05, 0, 0.35, 0)
GetBackupsButton.BackgroundColor3 = Color3.new(0.1, 0.5, 0.1)
GetBackupsButton.Text = "Fetch Backups"
GetBackupsButton.TextColor3 = Color3.new(1, 1, 1)
GetBackupsButton.Parent = Frame

local BackupsDropdown = Instance.new("TextBox")
BackupsDropdown.Size = UDim2.new(0.9, 0, 0.1, 0)
BackupsDropdown.Position = UDim2.new(0.05, 0, 0.5, 0)
BackupsDropdown.BackgroundColor3 = Color3.new(0.3, 0.3, 0.3)
BackupsDropdown.TextColor3 = Color3.new(1, 1, 1)
BackupsDropdown.PlaceholderText = "Backup Key (Select Below)"
BackupsDropdown.Parent = Frame

local RollbackButton = Instance.new("TextButton")
RollbackButton.Size = UDim2.new(0.9, 0, 0.1, 0)
RollbackButton.Position = UDim2.new(0.05, 0, 0.65, 0)
RollbackButton.BackgroundColor3 = Color3.new(0.5, 0.1, 0.1)
RollbackButton.Text = "Rollback to Selected Backup"
RollbackButton.TextColor3 = Color3.new(1, 1, 1)
RollbackButton.Parent = Frame

local StatusLabel = Instance.new("TextLabel")
StatusLabel.Size = UDim2.new(0.9, 0, 0.1, 0)
StatusLabel.Position = UDim2.new(0.05, 0, 0.8, 0)
StatusLabel.Text = "Status: Awaiting Action"
StatusLabel.TextColor3 = Color3.new(1, 1, 1)
StatusLabel.Parent = Frame

-- Button Actions
GetBackupsButton.MouseButton1Click:Connect(function()
    local playerId = tonumber(PlayerIdInput.Text)
    if not playerId then
        StatusLabel.Text = "Status: Invalid Player ID"
        return
    end
    
    local backups = getBackups(playerId)
    if backups then
        StatusLabel.Text = "Status: Backups Fetched"
        BackupsDropdown.Text = table.concat(backups, ", ")
    else
        StatusLabel.Text = "Status: Failed to Fetch Backups"
    end
end)

RollbackButton.MouseButton1Click:Connect(function()
    local playerId = tonumber(PlayerIdInput.Text)
    local backupKey = BackupsDropdown.Text
    if not playerId or backupKey == "" then
        StatusLabel.Text = "Status: Invalid Player ID or Backup Key"
        return
    end
    
    local success = rollbackPlayerData(playerId, backupKey)
    if success then
        StatusLabel.Text = "Status: Rollback Successful"
    else
        StatusLabel.Text = "Status: Rollback Failed"
    end
end)
